<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eb.test.MapperDao.EasybuyOrderMapper" >
  <resultMap id="BaseResultMap" type="com.eb.test.model.EasybuyOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="loginName" property="loginname" jdbcType="VARCHAR" />
    <result column="userAddress" property="useraddress" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="cost" property="cost" jdbcType="REAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="serialNumber" property="serialnumber" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userId, loginName, userAddress, createTime, cost, status, type, serialNumber
  </sql>
  
  <!-- 根据订单id查询 -->  
  <select id="selectMyOrder" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from easybuy_order
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  
  
  
  <!--取消订单  -->
  <update id="updateOrderStatus" parameterType="com.eb.test.model.EasybuyOrder" >
    update easybuy_order
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="loginname != null" >
        loginName = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="useraddress != null" >
        userAddress = #{useraddress,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=REAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="serialnumber != null" >
        serialNumber = #{serialnumber,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <!--删除订单  -->
   <delete id="delOrder" parameterType="java.lang.Integer" >
    delete  from  easybuy_order  
    where easybuy_order.id = #{orderId,jdbcType=INTEGER}
  </delete>
  
  
  <!-- **************************************dq************************************************ -->
  <!-- 大：查找所有订单信息 -->
  <select id="selectAllOrder" resultMap="BaseResultMap">
 	 select 
     <include refid="Base_Column_List" />
     from easybuy_order
  </select>
  <!-- 修改订单信息 -->
  <update id="updateOrderdq">
  	update easybuy_order
  	 status = #{status,jdbcType=INTEGER}
  	 where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- **************************************dqEnd************************************************ -->
  
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from easybuy_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  
 
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from easybuy_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.eb.test.model.EasybuyOrder" >
    insert into easybuy_order (id, userId, loginName, 
      userAddress, createTime, cost, 
      status, type, serialNumber
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{loginname,jdbcType=VARCHAR}, 
      #{useraddress,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{cost,jdbcType=REAL}, 
      #{status,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{serialnumber,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.eb.test.model.EasybuyOrder" >
    insert into easybuy_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="loginname != null" >
        loginName,
      </if>
      <if test="useraddress != null" >
        userAddress,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="cost != null" >
        cost,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="serialnumber != null" >
        serialNumber,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="loginname != null" >
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="useraddress != null" >
        #{useraddress,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=REAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="serialnumber != null" >
        #{serialnumber,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.eb.test.model.EasybuyOrder" >
    update easybuy_order
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="loginname != null" >
        loginName = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="useraddress != null" >
        userAddress = #{useraddress,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=REAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="serialnumber != null" >
        serialNumber = #{serialnumber,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eb.test.model.EasybuyOrder" >
    update easybuy_order
    set userId = #{userid,jdbcType=INTEGER},
      loginName = #{loginname,jdbcType=VARCHAR},
      userAddress = #{useraddress,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      cost = #{cost,jdbcType=REAL},
      status = #{status,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      serialNumber = #{serialnumber,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>